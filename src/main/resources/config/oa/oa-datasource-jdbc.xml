<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


	<!--&lt;!&ndash; 数据源配置 &ndash;&gt;-->
	<!--<bean id="xxx_datasource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">-->
		<!--<property name="url" value="jdbc:mysql://172.16.2.170:3306/godway1?useUnicode=true&amp;characterEncoding=UTF-8" />-->
		<!--<property name="username" value="nbpf" />-->
		<!--<property name="password" value="1qaz@2WSX" />-->

		<!--&lt;!&ndash;配置初始化大小、最小、最大&ndash;&gt;-->
		<!--<property name="initialSize" value="2" />-->
		<!--<property name="minIdle" value="20" />-->
		<!--<property name="maxActive" value="100" />-->

		<!--&lt;!&ndash;配置获取连接等待超时的时间&ndash;&gt;-->
		<!--<property name="maxWait" value="60000" />-->

		<!--&lt;!&ndash;配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒&ndash;&gt;-->
		<!--<property name="timeBetweenEvictionRunsMillis" value="60000" />-->

		<!--&lt;!&ndash;配置一个连接在池中最小生存的时间，单位是毫秒&ndash;&gt;-->
		<!--<property name="minEvictableIdleTimeMillis" value="300000" />-->
		<!--<property name="validationQuery" value="SELECT 'x'" />-->
		<!--<property name="testWhileIdle" value="true" />-->
		<!--<property name="testOnBorrow" value="false" />-->
		<!--<property name="testOnReturn" value="false" />-->

		<!--&lt;!&ndash;配置监控统计拦截的filters，去掉后监控界面sql无法统计&ndash;&gt;-->
		<!--<property name="filters" value="stat" />-->
	<!--</bean>-->

	<!--&lt;!&ndash; JDBCTemplate &ndash;&gt;-->
	<!--<bean id="xxx_jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">-->
		<!--<constructor-arg name="dataSource" ref="xxx_datasource"/>-->
	<!--</bean>-->

	<!--&lt;!&ndash; 事务配置 &ndash;&gt;-->
	<!--<bean id="xxx_transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
		<!--<property name="dataSource" ref="xxx_datasource"/>-->
	<!--</bean>-->

	<!--&lt;!&ndash; 开启事务注解，事务注解 可以配置多个数据源，最先加载的会被认为是默认事务管理器，所有不带参数的@Transactional注解都将默认使用此事务&ndash;&gt;-->
	<!--<tx:annotation-driven transaction-manager="xxx_transactionManager"/>-->
</beans>