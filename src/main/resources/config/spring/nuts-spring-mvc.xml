<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
				http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

    <!-- 自动扫描且只扫描@Controller -->
    <context:component-scan base-package="com.xcr.orange.oa,com.nuts" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <context:component-scan base-package="com.centit.framework" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
        <mvc:path-matching suffix-pattern="false"/>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
            <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
            <!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="prettyPrint" value="true"/>
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 国际化资源文件 -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <!-- 表示多语言配置文件在根路径下，以language开头的文件-->
        <property name="basename" value="classpath:/config/i18n/language"/>
        <property name="useCodeAsDefaultMessage" value="true"/>
    </bean>

    <mvc:interceptors>
        <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="lang"/>
        </bean>
    </mvc:interceptors>

    <!--防止页面报错   Can not change HTTP accept header -use a different locale resolution strategy-->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"> </bean>

    <!-- 处理静态文件请求，对静态文件不进行 Dispatcher -->
    <!--<mvc:default-servlet-handler/>-->
<!--    <mvc:resources mapping="/assets/**" location="/assets/" />-->
<!--    <mvc:resources mapping="/fh-ui/**" location="/fh-ui/"/>-->
<!--    <mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/"/>-->
<!--    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>-->

    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
    <bean id="contentNegotiationManager"
          class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="defaultContentType" value="application/json"/>
        <property name="mediaTypes">
            <value>
                json=application/json
                xml=application/xml
            </value>
        </property>
    </bean>

    <!--跨域规则，仅支持/api/开头的请求跨域-->
    <!--<mvc:cors>
        <mvc:mapping path="/**"
                    allowed-origins="*"
                    allowed-methods="GET,POST,OPTIONS,DELETE,PUT"
                    allowed-headers="*"
                    allow-credentials="true"/>
    </mvc:cors>-->

    <!-- 文件上传  -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 上传文件大小上限，单位为字节（10MB） -->
        <property name="maxUploadSize" value="10485760"/>
        <!-- 请求的编码格式，必须和jSP的pageEncoding属性一致，以便正确读取表单的内容，默认为ISO-8859-1 -->
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>


    <!-- 配置VelocityConfigurer，负责在spring中设置Velocity引擎。通过属性resourceLoaderPath告诉Velocity到哪里寻找它的模板。
   通常将模板放到WEB-INF下的某个子目录下，可以保证这些模板不能被直接访问。-->
    <!--规定模板文件的类型和位置-->
<!--    <bean id="velocityConfig"-->
<!--          class="org.apache.velocity.gdk.spring.web.VelocityConfigurer">-->
<!--        <property name="resourceLoaderPath" value="/WEB-INF/views/"/>-->
<!--        <property name="velocityProperties">-->
<!--            <props>-->
<!--                <prop key="input.encoding">utf-8</prop>-->
<!--                <prop key="output.encoding">utf-8</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--    </bean>-->

    <!--Velocity视图解析器-->
    <!--配置附加工具，以及将后缀为vm的文件交给下面的Resolver处理-->
<!--    <bean id="velocityViewResolver"-->
<!--          class="org.apache.velocity.gdk.spring.web.VelocityViewResolver">-->
<!--        <property name="cache" value="true"/>-->
<!--        <property name="prefix" value=""/>-->
<!--        <property name="suffix" value=".vm"/>-->
<!--        <property name="contentType" value="text/html;charset=utf-8"/>-->
<!--        <property name="toolboxConfigLocation" value="/WEB-INF/views/toolbox.xml"/>-->
<!--        <property name="exposeSpringMacroHelpers" value="true"/>-->
<!--        <property name="exposeRequestAttributes" value="true"/>-->
<!--        <property name="exposeSessionAttributes" value="true"/>-->
<!--        <property name="allowSessionOverride" value="true"/>-->
<!--        <property name="allowRequestOverride" value="true"/>-->
<!--        <property name="order" value="0"/>-->
<!--    </bean>-->

    <!--jsp视图解析器-->
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="10"/>
    </bean>

    <!--全局异常处理-->
<!--    <bean id="exceptionResolver" class="com.nuts.framework.exception.GlobalExceptionResolver">-->
<!--        <property name="exceptionMappings">-->
<!--            <props>-->
<!--                <prop key="java.lang.Exception">exception/500</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--        <property name="exceptionAttribute" value="ex"> </property>-->
<!--    </bean>-->
    
<!--    <import resource="classpath:/config/*/*-springmvc.xml"/>-->
</beans>
